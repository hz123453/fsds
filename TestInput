
package CarPrj2;


import java.util.Scanner;

public class TestInput {

    private static final Scanner sc = new Scanner(System.in);

    public static int getAnInteger(String inputMsg, String errorMsg) {
        int n;
        while (true) {
            try {
                System.out.print(inputMsg);
                n = Integer.parseInt(sc.nextLine());
                return n;
            } catch (NumberFormatException e) {
                System.out.println(errorMsg);
            }
        }
    }

    public static int getAnInteger(String inputMsg, String errorMsg, int min, int max) {
        int temp, n;
        if (max < min) {
            temp = max;
            max = min;
            min = temp;
        }
        
        while(true){
            try {
                System.out.print(inputMsg);
                n = Integer.parseInt(sc.nextLine());
                if(n >max || n < min ) throw new Exception();
                return n;
            } catch (Exception e) {
                System.out.println(errorMsg);
            }
        }
    }
    
    
    public static double getADouble(String inputMsg, String errorMsg) {
        double n;
        while (true) {
            try {
                System.out.print(inputMsg);
                n = Double.parseDouble(sc.nextLine());
                return n;
            } catch (NumberFormatException e) {
                System.out.println(errorMsg);
            }
        }
    }
    
    
    public static double getADouble(String inputMsg, String errorMsg, int min, int max) {
        double n;
        if (max < min) {
            int temp = max;
            max = min;
            min = temp;
        }
        
        while(true){
            try {
                System.out.print(inputMsg);
                n = Double.parseDouble(sc.nextLine());
                if(n >max || n < min ) throw new Exception();
                return n;
            } catch (Exception e) {
                System.out.println(errorMsg);
            }
        }
    }

    
    public static String getString(String inputMsg, String errorMsg){
        String name;        
        while (true) {
            System.out.print(inputMsg);
            name = sc.nextLine().trim();            
            if (name.length() == 0 || name.isEmpty())
                System.out.println(errorMsg);
            else 
                return name;
        }
    }
    
    public static String getFormat(String inputMsg, String errorMsg, String format){
        String bradID;
        boolean match;
        while (true) {
            System.out.print(inputMsg);
            bradID = sc.nextLine();
            match = bradID.matches(format);
            if (bradID.length() == 0 || bradID.isEmpty() || match == false)
                System.out.println(errorMsg);
            else
                return bradID;            
        }
    }
    
    
    
}
